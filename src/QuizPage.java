
import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import java.util.Random;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.io.Serializable;
import java.util.*;
import java.util.concurrent.TimeUnit;
import javax.swing.DefaultListModel;
import javax.swing.WindowConstants;

/*
was going to serialize and deserialize, but cant do that becuse of Timer
*/
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ayubs
 */
public class QuizPage extends javax.swing.JFrame {

    /**
     * Creates new form QuizPage
     */
    private class Attempt {
        int correct, skipped, points;
        String time;
        
        public Attempt(int points ,int correct, int skipped, String time){
            this.points = points;
            this.correct = correct;
            this.skipped = skipped;
            this.time = time;
        }
    }
    
    
    ArrayList<Element> allElements = new ArrayList<Element>();
    ArrayList<Element> answeredCorrectly = new ArrayList<Element>();
    ArrayList<Element> skipped = new ArrayList<Element>();
    ArrayList<Attempt> totalAttempts;
    Attempt currentAttempt;
    boolean gameRunning = false;
    int points = 0;
    boolean isIt = false;
    String countdown;
    int percent =0;
    Timer timer;
    int counter;
    
    public QuizPage(List temp) {
        initComponents();
        setResizable(false);
        this.setLocationRelativeTo(null);
        this.setSize(900,500);
        convertNodetoList(temp);
        prepareQuizPageGraphics();
        totalAttempts = new ArrayList<Attempt>();
        //when we open the QuizPage, call the loadAttempts file
        //this will load previous attempts, or initialize the list with head = tail;
    }
    
    
    
    public void prepareQuizPageGraphics(){
        answer.setEditable(false);
        numberTextField.setBackground(new java.awt.Color(0,0,0,1));
        symbolTextField.setBackground(new java.awt.Color(0,0,0,1));
        weightTextField.setBackground(new java.awt.Color(0,0,0,1));
        meltingTextField.setBackground(new java.awt.Color(0,0,0,1));
        boilingTextField.setBackground(new java.awt.Color(0,0,0,1));
        pointsTextField.setBackground(new java.awt.Color(0,0,0,1));
        timeTextField.setBackground(new java.awt.Color(0,0,0,1));
        answer.setBackground(new java.awt.Color(0,0,0,64));
        startQuizButton.setOpaque(false);
        startQuizButton.setContentAreaFilled(false); 
        skipButton.setOpaque(false);
        skipButton.setContentAreaFilled(false); 
        endGameButton.setOpaque(false);
        endGameButton.setContentAreaFilled(false); 
        mainMenuButton.setOpaque(false);
        mainMenuButton.setContentAreaFilled(false); 
    }
    
    
    private void convertNodetoList(List temp){
        Element curr = temp.head;
        while(curr != null){
            allElements.add(curr);
            curr = curr.next;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        QuitGame = new javax.swing.JDialog();
        jLabel5 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        skippedTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        correctTextArea = new javax.swing.JTextArea();
        jLabel18 = new javax.swing.JLabel();
        returnToMainQuitButton = new javax.swing.JButton();
        playAgainButton = new javax.swing.JButton();
        skippedTextField = new javax.swing.JTextField();
        correctTextField = new javax.swing.JTextField();
        finalTimeTextField = new javax.swing.JTextField();
        finalPointsTextField = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        symbolTextField = new javax.swing.JTextField();
        numberTextField = new javax.swing.JTextField();
        weightTextField = new javax.swing.JTextField();
        boilingTextField = new javax.swing.JTextField();
        meltingTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        timeTextField = new javax.swing.JTextField();
        pointsTextField = new javax.swing.JTextField();
        endGameButton = new javax.swing.JButton();
        startQuizButton = new javax.swing.JButton();
        skipButton = new javax.swing.JButton();
        mainMenuButton = new javax.swing.JButton();
        progressBar = new javax.swing.JProgressBar();
        answer = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        QuitGame.setTitle("Score Results");
        QuitGame.setMinimumSize(getPreferredSize());
        QuitGame.setSize(getPreferredSize());
        QuitGame.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                quitGameWindowCloses(evt);
            }
        });
        QuitGame.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Palatino Linotype", 1, 48)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Periodic Table Made Easy");
        QuitGame.getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 580, 70));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Game Over");
        QuitGame.getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 70, 100, 30));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Elements Skipped:");
        QuitGame.getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 180, 20));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Elements Guessed Correctly:");
        QuitGame.getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 190, 20));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Time: ");
        QuitGame.getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 120, 50, 20));

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Points:");
        QuitGame.getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 150, 70, 20));

        jScrollPane3.setBorder(null);
        jScrollPane3.setViewportView(null);

        skippedTextArea.setEditable(false);
        skippedTextArea.setBackground(new java.awt.Color(153, 153, 153));
        skippedTextArea.setColumns(20);
        skippedTextArea.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        skippedTextArea.setForeground(new java.awt.Color(255, 255, 255));
        skippedTextArea.setRows(5);
        skippedTextArea.setBorder(null);
        skippedTextArea.setSelectionColor(new java.awt.Color(153, 153, 153));
        jScrollPane3.setViewportView(skippedTextArea);

        QuitGame.getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 210, 160, 140));

        correctTextArea.setEditable(false);
        correctTextArea.setBackground(new java.awt.Color(153, 153, 153));
        correctTextArea.setColumns(20);
        correctTextArea.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        correctTextArea.setForeground(new java.awt.Color(255, 255, 255));
        correctTextArea.setRows(5);
        correctTextArea.setBorder(null);
        jScrollPane2.setViewportView(correctTextArea);

        QuitGame.getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 160, 140));

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Skipped: ");
        QuitGame.getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 190, 60, -1));

        returnToMainQuitButton.setBackground(new java.awt.Color(153, 153, 153));
        returnToMainQuitButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        returnToMainQuitButton.setForeground(new java.awt.Color(255, 255, 255));
        returnToMainQuitButton.setText("Main Menu");
        returnToMainQuitButton.setBorder(null);
        returnToMainQuitButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        returnToMainQuitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mainMenuButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                QuizPage.this.mouseExited(evt);
            }
        });
        returnToMainQuitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnToMainQuitButtonActionPerformed(evt);
            }
        });
        QuitGame.getContentPane().add(returnToMainQuitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 360, 90, -1));

        playAgainButton.setBackground(new java.awt.Color(153, 153, 153));
        playAgainButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        playAgainButton.setForeground(new java.awt.Color(255, 255, 255));
        playAgainButton.setText("Try Again");
        playAgainButton.setBorder(null);
        playAgainButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        playAgainButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                playAgainMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                QuizPage.this.mouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                mouseExited(evt);
            }
        });
        playAgainButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tryAgainButtonActionPerformed(evt);
            }
        });
        QuitGame.getContentPane().add(playAgainButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 360, 90, -1));

        skippedTextField.setEditable(false);
        skippedTextField.setBackground(new java.awt.Color(153, 153, 153));
        skippedTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        skippedTextField.setForeground(new java.awt.Color(255, 255, 255));
        skippedTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        QuitGame.getContentPane().add(skippedTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 150, 80, -1));

        correctTextField.setEditable(false);
        correctTextField.setBackground(new java.awt.Color(153, 153, 153));
        correctTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        correctTextField.setForeground(new java.awt.Color(255, 255, 255));
        correctTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        QuitGame.getContentPane().add(correctTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 120, 80, -1));

        finalTimeTextField.setEditable(false);
        finalTimeTextField.setBackground(new java.awt.Color(153, 153, 153));
        finalTimeTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        finalTimeTextField.setForeground(new java.awt.Color(255, 255, 255));
        finalTimeTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        QuitGame.getContentPane().add(finalTimeTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 120, 80, -1));

        finalPointsTextField.setEditable(false);
        finalPointsTextField.setBackground(new java.awt.Color(153, 153, 153));
        finalPointsTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        finalPointsTextField.setForeground(new java.awt.Color(255, 255, 255));
        finalPointsTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        QuitGame.getContentPane().add(finalPointsTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 150, 80, -1));

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Correct:");
        QuitGame.getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 60, -1));

        jLabel21.setIcon(new javax.swing.ImageIcon("C:\\Users\\ayubs\\OneDrive\\Desktop\\Ayub\\Projects\\Java\\PeriodicTable\\src\\periodicTable.png")); // NOI18N
        jLabel21.setText("jLabel21");
        QuitGame.getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 210, 250, 140));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backgroundImage.jpg"))); // NOI18N
        QuitGame.getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 650, 440));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quiz Page");
        setMaximumSize(new java.awt.Dimension(900, 500));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Palatino Linotype", 1, 48)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Periodic Table Made Easy");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 580, 70));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Guess the following elements as fast as you can! Each element guessed correctly is 10 points!");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, 770, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Melting Point:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 220, -1, 20));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Number:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 200, 80, 20));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Symbol: ");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 240, 100, 20));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Weight:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 180, 70, 20));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Boiling Point: ");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 260, -1, 20));

        symbolTextField.setEditable(false);
        symbolTextField.setBackground(new java.awt.Color(153, 153, 153));
        symbolTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        symbolTextField.setForeground(new java.awt.Color(255, 255, 255));
        symbolTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        symbolTextField.setBorder(null);
        symbolTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        symbolTextField.setSelectionColor(new java.awt.Color(102, 102, 102));
        getContentPane().add(symbolTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 230, 140, 30));

        numberTextField.setEditable(false);
        numberTextField.setBackground(new java.awt.Color(153, 153, 153));
        numberTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        numberTextField.setForeground(new java.awt.Color(255, 255, 255));
        numberTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        numberTextField.setBorder(null);
        numberTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        numberTextField.setSelectionColor(new java.awt.Color(102, 102, 102));
        getContentPane().add(numberTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 190, 140, 30));

        weightTextField.setEditable(false);
        weightTextField.setBackground(new java.awt.Color(153, 153, 153));
        weightTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        weightTextField.setForeground(new java.awt.Color(255, 255, 255));
        weightTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        weightTextField.setBorder(null);
        weightTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        weightTextField.setSelectionColor(new java.awt.Color(102, 102, 102));
        getContentPane().add(weightTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 170, 140, 30));

        boilingTextField.setEditable(false);
        boilingTextField.setBackground(new java.awt.Color(153, 153, 153));
        boilingTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        boilingTextField.setForeground(new java.awt.Color(255, 255, 255));
        boilingTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        boilingTextField.setBorder(null);
        boilingTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        boilingTextField.setSelectionColor(new java.awt.Color(102, 102, 102));
        getContentPane().add(boilingTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 250, 140, 30));

        meltingTextField.setEditable(false);
        meltingTextField.setBackground(new java.awt.Color(153, 153, 153));
        meltingTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        meltingTextField.setForeground(new java.awt.Color(255, 255, 255));
        meltingTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        meltingTextField.setBorder(null);
        meltingTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        meltingTextField.setSelectionColor(new java.awt.Color(102, 102, 102));
        getContentPane().add(meltingTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 210, 140, 30));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Time Left:");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 360, -1, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Points: ");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 330, -1, -1));

        timeTextField.setEditable(false);
        timeTextField.setBackground(new java.awt.Color(153, 153, 153));
        timeTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        timeTextField.setForeground(new java.awt.Color(255, 255, 255));
        timeTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        timeTextField.setBorder(null);
        timeTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        timeTextField.setSelectionColor(new java.awt.Color(153, 153, 153));
        getContentPane().add(timeTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 360, 80, -1));

        pointsTextField.setEditable(false);
        pointsTextField.setBackground(new java.awt.Color(153, 153, 153));
        pointsTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        pointsTextField.setForeground(new java.awt.Color(255, 255, 255));
        pointsTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        pointsTextField.setAutoscrolls(false);
        pointsTextField.setBorder(null);
        pointsTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().add(pointsTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 330, 80, -1));

        endGameButton.setBackground(new java.awt.Color(153, 153, 153));
        endGameButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        endGameButton.setForeground(new java.awt.Color(255, 255, 255));
        endGameButton.setText("End Quiz");
        endGameButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        endGameButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                endGameMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                changeExitColor(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                endGameMouseEntered(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                changeExitColor(evt);
            }
        });
        endGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endGameButtonActionPerformed(evt);
            }
        });
        getContentPane().add(endGameButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 420, 130, 30));

        startQuizButton.setBackground(new java.awt.Color(153, 153, 153));
        startQuizButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        startQuizButton.setForeground(new java.awt.Color(255, 255, 255));
        startQuizButton.setText("Start");
        startQuizButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        startQuizButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        startQuizButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                startMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                changeExitColor(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                startMouseEntered(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                changeExitColor(evt);
            }
        });
        startQuizButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startQuizButtonActionPerformed(evt);
            }
        });
        getContentPane().add(startQuizButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 420, 130, 30));

        skipButton.setBackground(new java.awt.Color(153, 153, 153));
        skipButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        skipButton.setForeground(new java.awt.Color(255, 255, 255));
        skipButton.setText("Skip");
        skipButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        skipButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                skipMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                changeExitColor(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                skipMouseEntered(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                changeExitColor(evt);
            }
        });
        skipButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skipButtonActionPerformed(evt);
            }
        });
        getContentPane().add(skipButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 420, 130, 30));

        mainMenuButton.setBackground(new java.awt.Color(153, 153, 153));
        mainMenuButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        mainMenuButton.setForeground(new java.awt.Color(255, 255, 255));
        mainMenuButton.setText("Main Menu");
        mainMenuButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mainMenuButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mainMenuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                changeExitColor(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                changeExitColor(evt);
            }
        });
        mainMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainMenuButtonActionPerformed(evt);
            }
        });
        getContentPane().add(mainMenuButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 420, 130, 30));

        progressBar.setBackground(new java.awt.Color(204, 204, 204));
        progressBar.setForeground(new java.awt.Color(153, 153, 153));
        getContentPane().add(progressBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 410, 680, 10));

        answer.setBackground(new java.awt.Color(153, 153, 153));
        answer.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        answer.setForeground(new java.awt.Color(255, 255, 255));
        answer.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        answer.setSelectionColor(new java.awt.Color(153, 153, 153));
        answer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                answerInputed(evt);
            }
        });
        getContentPane().add(answer, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 360, 340, 30));

        jLabel1.setBackground(new java.awt.Color(153, 153, 153));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backgroundImage.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public void generateElement(){
        if(gameRunning = true){
            boolean skip = false;
            int elementSize = allElements.size();
            Random rand = new Random();
            gameRunning = true;
            do{
                int randomIndex = rand.nextInt(elementSize); //this will return a number between 0 and allElements.size()-1
                Element elt = allElements.get(randomIndex);
                numberTextField.setText(""+elt.getNumber());
                symbolTextField.setText(elt.getSymbol());
                weightTextField.setText(""+elt.getWeight());
                meltingTextField.setText(""+elt.getMelting());
                boilingTextField.setText(""+elt.getBoiling());
            }while(gameRunning == true && skip == true);
        }
    }
    
    private void startQuizButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startQuizButtonActionPerformed
        // TODO add your handling code here:
        if(timer != null){
            timer.cancel();
        }
        gameRunning = true;
        skipped.clear();
        answeredCorrectly.clear();
        resetGameBoard();
        startTimer();
        pointsTextField.setText(""+points);
        answer.setEditable(true);
        generateElement();
    }//GEN-LAST:event_startQuizButtonActionPerformed

    private void endGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endGameButtonActionPerformed
        // TODO add your handling code here:
        //after we end the quiz and press the end button,
        // we need to read in the attempts file in to the head node
        //then add the current attempt at the end
        //then display it on the screen
        //after the tryagain or main menu buttons are pressed, we need to write the head node back to the list
        
        if(gameRunning == true){
            answer.setText("");
            answer.setEditable(false);
            isIt = true; //stops the timer
            gameRunning = false;
            System.out.println("About to call loadAttemptsHistory");
            //the previous attempts history should be read in by now
            //if not, then it should be initialized
            //add the current attempt to the list
            quitGame(); //after the quitgame button is pressed, we need to read in the scores
        }
        //prepareQuitGameGraphics();
        
    }//GEN-LAST:event_endGameButtonActionPerformed

    
    public void quitGame(){
        startQuizButton.setEnabled(false);
        skipButton.setEnabled(false);
        QuitGame.pack();
        QuitGame.setLocationRelativeTo(null);
        QuitGame.setSize(640,450);
        QuitGame.setVisible(true);
        QuitGame.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        skippedTextField.setText(""+skipped.size());
        
        
        int timeTaken = (3*60) - counter-1;
        int mint = timeTaken/60;
        int sec = timeTaken%60; 
        countdown = String.format("%02d", mint)+":"+String.format("%02d", sec);
        currentAttempt = new Attempt(points,answeredCorrectly.size(), skipped.size(), countdown);
        totalAttempts.add(currentAttempt);
        
        
        finalTimeTextField.setText(countdown);
        
        
        finalPointsTextField.setText(""+points);
        correctTextField.setText(""+answeredCorrectly.size());
        
        skippedTextField.setBackground(new java.awt.Color(0,0,0,64));
        finalTimeTextField.setBackground(new java.awt.Color(0,0,0,64));
        finalPointsTextField.setBackground(new java.awt.Color(0,0,0,64));
        correctTextField.setBackground(new java.awt.Color(0,0,0,64));
        skippedTextField.setBorder(null);
        finalTimeTextField.setBorder(null);
        finalPointsTextField.setBorder(null);
        correctTextField.setBorder(null);
        
        correctTextArea.setLineWrap(true);
        skippedTextArea.setLineWrap(true);
        //historyTextArea.setLineWrap(true);
        
        
        playAgainButton.setOpaque(false);
        playAgainButton.setContentAreaFilled(false); 
        
        returnToMainQuitButton.setOpaque(false);
        returnToMainQuitButton.setContentAreaFilled(false); 
        
        skippedTextArea.setBackground(new java.awt.Color(0,0,0,1));
        
        
        jScrollPane2.setOpaque(false);
        jScrollPane2.getViewport().setOpaque(false);
        jScrollPane2.setBorder(null);
        jScrollPane2.setViewportBorder(null);
        
        correctTextArea.setBorder(null);
        correctTextArea.setBackground(new java.awt.Color(0,0,0,1));

        String format = "%-15s%-15s%-15s%-15s";
        String format2 = "%-20s%-20s%-20s%-15s";
        
        jScrollPane3.setOpaque(false);
        jScrollPane3.getViewport().setOpaque(false);
        jScrollPane3.setBorder(null);
        jScrollPane3.setViewportBorder(null);
        
        skippedTextArea.setBorder(null);
        skippedTextArea.setBackground(new java.awt.Color(0,0,0,1));
        
        correctTextArea.setText(null);
        for(int i = 0 ; i< answeredCorrectly.size(); i++){
            if(answeredCorrectly.get(i) != null){
                String name = answeredCorrectly.get(i).getName();
                correctTextArea.append(name+"\n");
            }
        }
        skippedTextArea.setText(null);
        for(int i = 0 ; i< skipped.size(); i++){
            if(skipped.get(i) != null){
                String name = skipped.get(i).getName();
                skippedTextArea.append(name+"\n");
            }
        }
    }
    
    public void incrementPoints(){
        points += 10;
    }
    
    public void resetPoints(){
        points = 0;
    }
    
    public void startTimer(){
        if(gameRunning ==  true){
            timeTextField.setForeground(Color.WHITE);
            gameRunning = false;
            timer = new Timer(); //new timer
            counter = 3*60; //setting the counter to 10 sec
            TimerTask task = new TimerTask() {         
                public void run() {                
                    int seconds = counter%60;
                    int minutes = counter/60;
                    
                    Font fnt = timeTextField.getFont();
                    float originalsize = fnt.getSize();
                    
                    countdown = String.format("%02d", minutes)+":"+String.format("%02d", seconds);
                    if(minutes < 1 && seconds <= 10){ //this is the heartbeat affect on the countdown
                        timeTextField.setForeground(Color.RED);
                        if(!isIt){
                            float expand = originalsize + 2.0f;
                            System.out.println(expand);
                            timeTextField.setFont( fnt.deriveFont(expand));
                            timeTextField.setText(countdown); //the timer lable to counter.
                            try{
                                TimeUnit.MILLISECONDS.sleep(300);
                            }catch(Exception e){
                            }
                            expand = originalsize;
                            System.out.println("shrink now: "+expand);
                            timeTextField.setFont( fnt.deriveFont(expand) );
                            timeTextField.setText(countdown); //the timer lable to counter.
                        }
                    }else{
                        if(!isIt)
                            timeTextField.setText(countdown); //the timer lable to counter
                    }
                    counter --;
                    if (counter == -1){
                        timer.cancel();             
                        quitGame();
                    }else if(isIt){
                        timer.cancel();
                        isIt = false;
                    }
                }
            };
        timer.scheduleAtFixedRate(task, 0, 1000); // =  timer.scheduleAtFixedRate(task, delay, period);
        }
    }
    
    private void answerInputed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_answerInputed
        char c = evt.getKeyChar();
        System.out.println(answeredCorrectly.size());
        System.out.println(allElements.size());
        if((Character.isDigit(c))){ //if the typed in answer is a number, don't allow it
            evt.consume();
        }
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){ //if the keycode typed is the button enter
            //System.out.println("Enter button was logged");
            String UserAnswer = answer.getText(); //if the button pressed is enter, then the answer has been given
            if(UserAnswer != null && UserAnswer != ""){
                for(int i = 0; i < allElements.size(); i++){
                    if(UserAnswer.equalsIgnoreCase(allElements.get(i).getName())){ //type in the element name without regards to capitalization
                        if(Integer.parseInt(numberTextField.getText()) == allElements.get(i).getNumber()){
                            if(!answeredCorrectly.contains(allElements.get(i))){
                                answeredCorrectly.add(allElements.get(i));
                                percent = (int)((double)answeredCorrectly.size()/(double)allElements.size()*100);
                                System.out.println(percent);
                                progressBar.setValue(percent);
                            }
                            answer.setText("");
                            incrementPoints();
                            pointsTextField.setText(""+points);
                            generateElement();
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_answerInputed

    private void skipButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skipButtonActionPerformed
        // TODO add your handling code here:
        if(gameRunning == true){
            for(int i = 0; i< allElements.size() ;i++ ){
                int num = allElements.get(i).getNumber();
                if(num == Integer.parseInt(numberTextField.getText())){
                    if(!skipped.contains(allElements.get(i))){
                        skipped.add(allElements.get(i));
                    }
                }
            }
            answer.setEditable(true);
            generateElement();
            answer.setText("");
        }
    }//GEN-LAST:event_skipButtonActionPerformed

    public void resetGameBoard(){
        startQuizButton.setEnabled(true);
        skipButton.setEnabled(true);
        progressBar.setValue(0);
        resetPoints();
        countdown ="";
        numberTextField.setText("");
        symbolTextField.setText("");
        weightTextField.setText("");
        meltingTextField.setText("");
        boilingTextField.setText("");
        pointsTextField.setText(""+points);
        timeTextField.setText("00:00");
    }
    private void tryAgainButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tryAgainButtonActionPerformed
        // TODO add your handling code here:
        //write the attempts file
        File output = new File("Attempts History");
        System.out.println("Just created a new file");
        QuitGame.setVisible(false);
        
        resetGameBoard();
    }//GEN-LAST:event_tryAgainButtonActionPerformed

    private void returnToMainQuitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnToMainQuitButtonActionPerformed
        // TODO add your handling code here:
        QuitGame.setVisible(false);
        this.setVisible(false);
        StartPage st = new StartPage();
        st.setVisible(true);
    }//GEN-LAST:event_returnToMainQuitButtonActionPerformed

    private void mainMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainMenuButtonActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        StartPage st = new StartPage();
        st.setVisible(true);
    }//GEN-LAST:event_mainMenuButtonActionPerformed

    private void startMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startMouseEntered
        startQuizButton.setForeground(Color.GRAY);
    }//GEN-LAST:event_startMouseEntered

    private void skipMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_skipMouseEntered
        skipButton.setForeground(Color.GRAY);
    }//GEN-LAST:event_skipMouseEntered

    private void endGameMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_endGameMouseEntered
        // TODO add your handling code here:
        endGameButton.setForeground(Color.GRAY);
    }//GEN-LAST:event_endGameMouseEntered

    private void mainMenuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainMenuMouseEntered
        // TODO add your handling code here:
        mainMenuButton.setForeground(Color.GRAY);
    }//GEN-LAST:event_mainMenuMouseEntered

    private void changeExitColor(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeExitColor
        startQuizButton.setForeground(Color.WHITE);
        skipButton.setForeground(Color.WHITE);
        endGameButton.setForeground(Color.WHITE);
        mainMenuButton.setForeground(Color.WHITE);
    }//GEN-LAST:event_changeExitColor

    private void playAgainMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playAgainMouseEntered
        // TODO add your handling code here:
        playAgainButton.setForeground(Color.GRAY);
    }//GEN-LAST:event_playAgainMouseEntered

    private void mainMenuButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainMenuButtonMouseEntered
        // TODO add your handling code here:
        returnToMainQuitButton.setForeground(Color.GRAY);
    }//GEN-LAST:event_mainMenuButtonMouseEntered

    private void mouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseExited
        // TODO add your handling code here:
        playAgainButton.setForeground(Color.WHITE);
        returnToMainQuitButton.setForeground(Color.WHITE);
    }//GEN-LAST:event_mouseExited

    private void quitGameWindowCloses(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_quitGameWindowCloses
        // TODO add your handling code here:
        startQuizButton.setEnabled(true);
        skipButton.setEnabled(true);
        resetGameBoard();
    }//GEN-LAST:event_quitGameWindowCloses

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws InterruptedException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuizPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuizPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuizPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuizPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()   {
            public void run() {
                //new QuizPage().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog QuitGame;
    private javax.swing.JTextField answer;
    private javax.swing.JTextField boilingTextField;
    private javax.swing.JTextArea correctTextArea;
    private javax.swing.JTextField correctTextField;
    private javax.swing.JButton endGameButton;
    private javax.swing.JTextField finalPointsTextField;
    private javax.swing.JTextField finalTimeTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton mainMenuButton;
    private javax.swing.JTextField meltingTextField;
    private javax.swing.JTextField numberTextField;
    private javax.swing.JButton playAgainButton;
    private javax.swing.JTextField pointsTextField;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JButton returnToMainQuitButton;
    private javax.swing.JButton skipButton;
    private javax.swing.JTextArea skippedTextArea;
    private javax.swing.JTextField skippedTextField;
    private javax.swing.JButton startQuizButton;
    private javax.swing.JTextField symbolTextField;
    private javax.swing.JTextField timeTextField;
    private javax.swing.JTextField weightTextField;
    // End of variables declaration//GEN-END:variables
}
